{"version":3,"sources":["components/Main/Category.js","components/Main/Main.js","App.js","components/OAuth/Login.js","components/Raffle/Unlotted.js","components/Raffle/Regist.js","components/Raffle/Raffle.js","Root.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grid","height","background","disable","opacity","typography","color","areEqual","prevProps","nextProps","category","name","Category","onClick","classes","Grid","item","className","clsx","e","Typography","variant","key","transCategory","React","memo","Main","handleClick","container","direction","padding","fetch","process","then","response","ok","console","log","App","history","SetRaffle","useState","korea","western","china","japan","snack","setCategory","useEffect","raffle","Object","entries","chkCategory","push","Box","Container","maxWidth","box","marginLeft","marginTop","typo_first","textAlign","typo_else","Login","location","match","setToken","query","queryString","parse","search","params","getToken","code","a","json","hasOwnProperty","access_token","setTimeout","CircularProgress","size","to","bottomGridContainer","spacing","bottomGridItem","paper","Unlotted","unlotted","map","menu","index","xs","Paper","bottomBox","borderTop","marginRight","width","register","border","borderRadius","registerHeader","marginBottom","zIndex","registerBody","registerFooter","justifyContent","alignItems","textArea","resize","minHeight","lineHeight","registerButton","textTransform","registerTab","borderBottom","Regist","token","issueNumber","updateMenu","registValue","setRegistValue","url","join","placeholder","onChange","target","value","Button","method","headers","Authorization","Accept","body","JSON","stringify","alert","catch","href","topGridContainer","topGridItem","raffleMenu","cursor","middleBox","overflow","issue_number","getMenu","answer","comments","forEach","Raffle","menus","setMenus","raffleResult","setRaffleResult","justify","align","m_len","length","randomNum","Math","floor","random","Root","basename","exact","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0373df39.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Grid, makeStyles, Typography} from \"@material-ui/core\"\r\nimport clsx from \"clsx\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    height: `20vh`,\r\n    background: 'rgb(30, 34, 42)',\r\n    // 'background-image': \"url('/images/korean.jpg')\"\r\n  },\r\n  disable: {\r\n    opacity: 0.5\r\n  },\r\n  typography: {\r\n    color: `white`\r\n  }\r\n}))\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  return prevProps.category[prevProps.name] === nextProps.category[nextProps.name]\r\n}\r\n\r\nconst Category = ({category, onClick, name}) => {\r\n  const classes = useStyles()\r\n  // category 이름 번역\r\n  const transCategory = (key) => {\r\n    switch (key) {\r\n      case 'korea':\r\n        return '한식'\r\n      case 'western':\r\n        return '양식'\r\n      case 'china':\r\n        return '중식'\r\n      case 'japan':\r\n        return '일식'\r\n      case 'snack':\r\n        return '분식'\r\n      default:\r\n        return 'Error'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid item\r\n          className={clsx(classes.grid,{\r\n            [classes.disable]: !category[name]\r\n          })}\r\n          onClick={(e) => {\r\n            onClick(name)\r\n          }}\r\n    >\r\n      <Typography variant={`h5`}\r\n                  className={classes.typography}\r\n      >\r\n        {transCategory(name)}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default React.memo(Category, areEqual)\r\n","import React from 'react'\r\nimport Category from \"./Category\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nconst Main = ({category, handleClick}) => {\r\n  return (\r\n    <Grid container\r\n          direction={`column`}\r\n    >\r\n      <Category category={category} name={`korea`} onClick={handleClick} />\r\n      <Category category={category} name={`western`} onClick={handleClick} />\r\n      <Category category={category} name={`china`} onClick={handleClick} />\r\n      <Category category={category} name={`japan`} onClick={handleClick} />\r\n      <Category category={category} name={`snack`} onClick={handleClick} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Main","import './App.css';\r\nimport {Box, Container, makeStyles} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\"\r\nimport Main from \"./components/Main/Main\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: 0\r\n  },\r\n}))\r\n\r\n// proxy 서버 켜기\r\nfetch(`${process.env.REACT_APP_PROXY}/state/check`)\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      console.log('proxy, on') \r\n    }\r\n  })\r\n\r\nconst App = ({history, SetRaffle}) => {\r\n  const classes = useStyles() // CSS\r\n  // 활성화, 비활성화 토글 변수\r\n  const [category, setCategory] = useState(\r\n    {\r\n      korea: true,\r\n      western: true,\r\n      china: true,\r\n      japan: true,\r\n      snack: true\r\n    }\r\n  )\r\n  // 클릭하면 해당 카테고리 활성화 혹은 비활성화\r\n  const handleClick = (name) => {\r\n    setCategory(category => category = {...category, [name]: !category[name]})\r\n  }\r\n  // 활성화된 category가 한개면 true\r\n  const chkCategory = () => {\r\n    let raffle = ''\r\n    for (const [key, value] of Object.entries(category)) {\r\n      if (value) {\r\n        if (raffle !== '') {\r\n          return false\r\n        } else {\r\n          raffle = key\r\n        }\r\n      }\r\n    }\r\n    return raffle\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const key = chkCategory()\r\n    if (key) {\r\n      history.push(`/raffle/${key}`)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Box>\r\n        <Container  maxWidth={`lg`}\r\n                    className={classes.container}\r\n        >\r\n          <Main category={category} handleClick={handleClick}></Main>\r\n        </Container>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport queryString from 'query-string'\r\nimport {CircularProgress, Box, makeStyles, Typography} from \"@material-ui/core\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    marginLeft: 'calc(50% - 50px)',\r\n    marginTop: 'calc(50vh - 100px)'\r\n  },\r\n  typo_first: {\r\n    marginTop: '100px',\r\n    textAlign: 'center'\r\n  },\r\n  typo_else: {\r\n    textAlign: 'center'\r\n  }\r\n}))\r\n\r\nconst Login = ({history, location, match, setToken}) => {\r\n  const classes = useStyles() // css\r\n  const query = queryString.parse(location.search) // URL 파싱\r\n  const category = match.params.category // 선택한 category\r\n  \r\n  const getToken = async (code) => {\r\n    // 토큰 발급\r\n    await fetch(`${process.env.REACT_APP_PROXY}/access_token/${code}/${process.env.REACT_APP_STATE}`)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(json => {\r\n        if (json.hasOwnProperty('access_token')) {\r\n          setToken(json.access_token)\r\n          history.push(`/raffle/${category}`)\r\n        } else {\r\n          // 서버가 꺼져있는 경우 반복 요청(서버 실행시간 13초)\r\n          setTimeout(() => [\r\n            getToken(code)\r\n          ], 15000)\r\n        }\r\n      })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getToken(query.code)\r\n  })\r\n\r\n  return (\r\n    <Box>\r\n      <Box  className={classes.box}>\r\n        <CircularProgress color=\"primary\" \r\n                          size={100}\r\n        />\r\n      </Box>\r\n      <Typography className={classes.typo_first}>\r\n        잠시 기다려주세요. <strike>무료 서버라서 그런지 느리네요.</strike>\r\n      </Typography>\r\n      <Typography className={classes.typo_else}>\r\n        아니면 \r\n        <Link to={`/raffle/${category}`}><b> 여길 </b></Link>\r\n        눌러서 이전 화면으로 돌아가셨다가\r\n      </Typography>\r\n      <Typography className={classes.typo_else}>\r\n        조금 있다가 다시 돌아오면 될 거에요!!!\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {Grid, makeStyles, Paper, Typography} from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomGridContainer: {\r\n    // height: '100%',\r\n    padding: theme.spacing(1)\r\n  },\r\n  bottomGridItem: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    height: '100%',\r\n    padding: theme.spacing(2),\r\n  }\r\n}))\r\n\r\nconst Unlotted = ({unlotted}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid container\r\n          className={classes.bottomGridContainer}\r\n    >\r\n      {unlotted.map((menu, index) => {\r\n        return (\r\n          <Grid item\r\n                xs={3}\r\n                className={classes.bottomGridItem}\r\n                key={index}\r\n          >\r\n            <Paper  className={classes.paper}\r\n                    variant={'outlined'}\r\n            >\r\n              <Typography>{menu}</Typography>\r\n            </Paper>\r\n          </Grid>\r\n        )\r\n      })}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Unlotted\r\n","import React from 'react'\r\nimport {Grid, makeStyles, Box, Button} from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomBox: {\r\n    height: '25vh',\r\n    background: 'rgb(30, 34, 42)',\r\n    borderTop: '1px solid rgb(201, 209, 217)',\r\n  },\r\n  bottomGridContainer: {\r\n    height: '100%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    width: '100%',\r\n    maxWidth: '760px',\r\n    padding: theme.spacing(2),\r\n  },\r\n  register: {\r\n    background: 'rgb(40, 44, 52)',\r\n    border: '1px solid rgb(201, 209, 217)',\r\n    borderRadius: '6px',\r\n  },\r\n  registerHeader: {\r\n    padding: '8px 8px 0',\r\n    marginBottom: '-1px',\r\n    zIndex: '1'\r\n  },\r\n  registerBody: {\r\n    background: 'rgb(30, 34, 42)',\r\n    padding: theme.spacing(1),\r\n    borderTop: '1px solid rgb(201, 209, 217)',\r\n  },\r\n  registerFooter: {\r\n    background: 'rgb(30, 34, 42)',\r\n    padding: '0 8px 8px',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    borderRadius: '6px'\r\n  },\r\n  textArea: {\r\n    resize: 'vertical',\r\n    width: '100%',\r\n    minHeight: '90px',\r\n    padding: theme.spacing(1),\r\n    borderRadius: '6px',\r\n    lineHeight: '1.5'\r\n  },\r\n  registerButton: {\r\n    textTransform: 'none'\r\n  },\r\n  registerTab: {\r\n    padding: '8px 16px',\r\n    color: 'rgb(255, 255, 255)',\r\n    background: 'rgb(30, 34, 42)',\r\n    border: '1px solid rgb(201, 209, 217)',\r\n    borderBottom: '0',\r\n    borderRadius: '6px 6px 0 0',\r\n  }\r\n}))\r\n\r\nconst Regist = ({token, issueNumber, category, updateMenu}) => {\r\n  const [registValue, setRegistValue] = React.useState('') // 메뉴 등록 value\r\n  const classes = useStyles() // css\r\n  // code 발급 경로 url 설정\r\n  const params = [\r\n    `client_id=${process.env.REACT_APP_CLIENT_ID}`,\r\n    `state=${process.env.REACT_APP_STATE}`,\r\n    `scope=public_repo`,\r\n    `redirect_uri=${process.env.REACT_APP_REDIRECT}/what-eat/login/${category}`\r\n  ]\r\n  const url = 'https://github.com/login/oauth/authorize?' + params.join('&')\r\n  // 메뉴 등록\r\n  const registMenu = () => {\r\n    fetch(`https://api.github.com/repos/wesbin/what-eat/issues/${issueNumber}/comments`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `token ${token}`,\r\n        Accept: 'application/vnd.github.v3+json'\r\n      },\r\n      body: JSON.stringify({\r\n        body: registValue\r\n      })\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then((json) => {\r\n        alert(`'${registValue}' 메뉴가 등록 중입니다. 화면에 보이는건 느릴 수 있어요.`)\r\n        setRegistValue('')\r\n        updateMenu()\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.bottomBox}>\r\n      <Grid container\r\n            className={classes.bottomGridContainer}\r\n      >\r\n        <Grid container\r\n              className={classes.register}\r\n        >\r\n          {/* Header #s */}\r\n          <Grid container\r\n                className={classes.registerHeader}\r\n                >\r\n            <Grid item\r\n                  className={classes.registerTab}\r\n                  >\r\n              메뉴\r\n            </Grid>\r\n          </Grid>\r\n          {/* Header #e */}\r\n          {/* Body #s */}\r\n          <Grid container\r\n                className={classes.registerBody}\r\n                >\r\n            <textarea className={classes.textArea}\r\n                      placeholder={'등록하고 싶은 메뉴를 적어주세요.'}\r\n                      onChange={(e) => {\r\n                        setRegistValue(e.target.value)\r\n                      }}\r\n                      value={registValue}\r\n                      />\r\n          </Grid>\r\n          {/* Body #s */}\r\n          {/* Footer #s */}\r\n          <Grid container\r\n                className={classes.registerFooter}\r\n                >\r\n            {\r\n              token ?\r\n              <Button variant={'contained'}\r\n              size={'small'}\r\n              className={classes.registerButton}\r\n              onClick={registMenu}\r\n              >\r\n                등록\r\n              </Button>\r\n              :\r\n              <Button variant={'contained'}\r\n              size={'small'}\r\n              className={classes.registerButton}>\r\n                <a href={url}>GitHub 로그인</a>\r\n              </Button>\r\n            }\r\n          </Grid>\r\n          {/* Footer #e */}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Regist\r\n","import React from 'react'\r\nimport {Grid, makeStyles, Box, Typography, Container} from \"@material-ui/core\"\r\nimport Unlotted from './Unlotted'\r\n\r\nimport clsx from \"clsx\"\r\n\r\nimport Regist from './Regist'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: 0\r\n  },\r\n  topGridContainer: {\r\n    height: '40vh',\r\n    background: 'rgb(30, 34, 42)',\r\n    padding: theme.spacing(2)\r\n  },\r\n  topGridItem: {\r\n    height: '100%',\r\n    padding: theme.spacing(8),\r\n    color: 'rgb(255, 255, 255)',\r\n  },\r\n  raffleMenu: {\r\n    background: 'rgb(40, 44, 52)',\r\n    cursor: 'pointer'\r\n  },\r\n  middleBox: {\r\n    height: '35vh',\r\n    background: 'rgb(30, 34, 42)',\r\n    borderTop: '1px solid rgb(201, 209, 217)',\r\n    overflow: 'scroll',\r\n  },\r\n}))\r\n\r\n// 현재 타겟이 되는 이슈의 번호\r\nlet issue_number = 0\r\nconst getMenu = async (category) => {\r\n  const answer = [] // 메뉴 이름들\r\n  const categoryNum = {\r\n    'korea': 1,\r\n    'china': 2,\r\n    'western': 3,\r\n    'japan': 4,\r\n    'snack': 5\r\n  }\r\n  issue_number = categoryNum[category]\r\n  // 이슈 번호를 사용하여 코멘트 불러오기\r\n  if (issue_number === 0) return 0\r\n  await fetch(`https://api.github.com/repos/wesbin/what-eat/issues/${issue_number}/comments`)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(comments => {\r\n      // 메뉴 이름 추출\r\n      comments.forEach(menu => answer.push(menu.body))\r\n    })\r\n\r\n  return answer\r\n}\r\n\r\nconst Raffle = ({token, match}) => {\r\n  const [menus, setMenus] = React.useState([]) // Git에서 불러온 전체 메뉴\r\n  const [raffleResult, setRaffleResult] = React.useState('') // 메뉴 추첨 결과\r\n  const category = match.params.category // 선택한 category\r\n  const classes = useStyles() // css\r\n  // Git에서 메뉴 불러와 세팅\r\n  React.useEffect(() => {\r\n    getMenu(category).then(answer => {\r\n      if (answer === 0) {\r\n        alert('Error')\r\n      } else {\r\n        setMenus(answer)\r\n      }\r\n    })\r\n  }, [category])\r\n  // 메뉴 추첨\r\n  const raffleMenu = () => {\r\n    const m_len = menus.length\r\n    if (m_len < 1) {\r\n      alert('메뉴들이 도착하고 있어요!')\r\n    } else {\r\n      const randomNum = Math.floor(Math.random() * m_len) // 랜덤 변수\r\n      setRaffleResult(menus[randomNum])\r\n    }\r\n  }\r\n  // 메뉴 등록 후 업데이트\r\n  const updateMenu = () => {\r\n    getMenu(category).then(answer => {\r\n      if (answer === 0) {\r\n        alert('Error')\r\n      } else {\r\n        setMenus(answer)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Container  maxWidth={'lg'}\r\n                  className={classes.container}\r\n      >\r\n        {/* Top #s */}\r\n        <Grid container\r\n              className={classes.topGridContainer}\r\n              alignItems={'center'}\r\n              justify={'center'}\r\n        >\r\n          <Grid item\r\n                className={classes.topGridItem}\r\n                xs={12}\r\n          >\r\n            <Typography variant={'h2'}\r\n                        align={'left'}\r\n            >\r\n              오늘은\r\n            </Typography>\r\n            <Typography variant={'h2'}\r\n                        className={classes.raffleMenu}\r\n                        align={'left'}\r\n                        onClick={(e) => {\r\n                          raffleMenu()\r\n                        }}\r\n            >\r\n              {raffleResult ? raffleResult : '이건'}\r\n            </Typography>\r\n            <Typography variant={'h2'}\r\n                        align={'left'}\r\n            >\r\n              어때요\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {/* Top #e */}\r\n        {/* Middle #s */}\r\n        <Box  className={classes.middleBox}>\r\n          <Unlotted unlotted={menus}></Unlotted>\r\n        </Box>\r\n        {/* Middle #e */}\r\n        {/* Bottom #s */}\r\n        <Regist token={token} issueNumber={issue_number} category={category} updateMenu={updateMenu}/>\r\n        {/* Bottom #e */}\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Raffle\r\n","import React from 'react'\r\nimport {BrowserRouter, Route, Switch} from  'react-router-dom'\r\nimport App from './App'\r\nimport Login from './components/OAuth/Login'\r\nimport Raffle from './components/Raffle/Raffle'\r\n\r\nconst Root = () => {\r\n\r\n  const [token, setToken] = React.useState('')\r\n\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route  exact path=\"/\" \r\n                render={(props) => <App {...props}/>}/>\r\n        <Route  path=\"/login/:category\" \r\n                render={(props) => <Login setToken={setToken} {...props}/>}/>\r\n        <Route  path=\"/raffle/:category\"\r\n                render={(props) => <Raffle token={token} {...props}/>}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Root\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}